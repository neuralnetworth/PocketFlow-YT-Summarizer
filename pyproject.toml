[project]
name = "pocketflow-youtube-summarizer"
version = "1.0.0"
description = "LLM-powered application that converts long YouTube videos into concise, easy-to-understand summaries"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"
authors = [
    {name = "PocketFlow Team"}
]
keywords = ["llm", "youtube", "summarization", "ai", "pocketflow"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "pocketflow>=0.0.1",
    "requests>=2.28.0",
    "beautifulsoup4>=4.11.0",
    "youtube-transcript-api>=0.6.0",
    "openai>=1.0.0",
    "pyyaml>=6.0",
    "google-generativeai>=0.8.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/The-Pocket/PocketFlow-YT-Summarizer"
Repository = "https://github.com/The-Pocket/PocketFlow-YT-Summarizer"
Documentation = "https://github.com/The-Pocket/PocketFlow-YT-Summarizer/blob/main/README.md"
Issues = "https://github.com/The-Pocket/PocketFlow-YT-Summarizer/issues"

[project.scripts]
youtube-summarizer = "main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["utils"]
artifacts = [
    "flow.py",
    "main.py",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["utils", "flow"]
omit = [
    "tests/*",
    "examples/*",
    "docs/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.ruff.isort]
known-first-party = ["utils", "flow"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true

[[tool.mypy.overrides]]
module = [
    "pocketflow.*",
    "youtube_transcript_api.*",
    "google.generativeai.*",
]
ignore_missing_imports = true